name: CI

on:
    pull_request:
      types: [opened, synchronize]
    workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: .cache/npm
          key: ${{ runner.os }}-npm-cache
      - name: Install Dependencies
        run: npm install --quiet --no-progress --cache=.cache/npm

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: .cache/npm
          key: ${{ runner.os }}-npm-cache
      - name: Install Dependencies
        run: npm install --quiet --no-progress --cache=.cache/npm
      - name: Lint
        run: node_modules/.bin/gulp lint

  bundle-stable:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: .cache/npm
          key: ${{ runner.os }}-npm-cache
      - name: Install Dependencies
        run: npm install --quiet --no-progress --cache=.cache/npm
      - name: Bundle
        run: node_modules/.bin/gulp bundle
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ui-bundle
          path: build/ui-bundle.zip

  bundle-dev:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: .cache/npm
          key: ${{ runner.os }}-npm-cache
      - name: Install Dependencies
        run: npm install --quiet --no-progress --cache=.cache/npm
      - name: Bundle
        run: node_modules/.bin/gulp bundle
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ui-bundle
          path: build/ui-bundle.zip
          retention-days: 1

  upload:
    name: Create release and upload artifacts
    needs:
      - bundle-stable
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage build/ui-bundle.zip
